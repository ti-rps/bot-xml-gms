name: Deploy GMS XML Worker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4

      - name: 2. Preparar o ambiente de produção do Worker
        run: |
          # Define o caminho de produção baseado no Secret
          PROD_PATH="${{ secrets.WORKER_DEPLOY_PATH }}"
          
          # Pega o caminho do código que o runner baixou
          WORKSPACE_PATH="${{ github.workspace }}"
          
          echo "Criando diretório de produção em $PROD_PATH"
          mkdir -p $PROD_PATH
          
          echo "Criando arquivo .env em $PROD_PATH"
          # Cria o .env de produção a partir do Secret
          echo "${{ secrets.WORKER_ENV_FILE }}" > $PROD_PATH/.env
          
          echo "Sincronizando código-fonte para $PROD_PATH"
          # Copia o código novo (incluindo docker-compose.yml) para o diretório
          rsync -aq --delete $WORKSPACE_PATH/ $PROD_PATH/

      - name: 3. Buildar e Reiniciar o Serviço Worker
        working-directory: ${{ secrets.WORKER_DEPLOY_PATH }}
        run: |
          echo "Buildando a nova imagem do gms-xml-worker..."
          # Builda o serviço 'gms-xml-worker'
          docker-compose build gms-xml-worker
          
          echo "Subindo o serviço atualizado..."
          # Sobe o serviço, recriando apenas ele
          docker-compose up -d gms-xml-worker
          
          echo "Limpando imagens antigas..."
          docker image prune -f 